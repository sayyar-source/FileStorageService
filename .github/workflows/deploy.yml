name: Deploy to Azure

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ./FileStorageService.sln

      # Build the solution
      - name: Build
        run: dotnet build ./FileStorageService.sln --configuration Release --no-restore

      # Run tests
      - name: Test
        run: dotnet test ./FileStorageService.sln --no-build --verbosity normal

      # Publish the application
      - name: Publish
        run: dotnet publish ./FileStorageService.sln -c Release -o ./publish

    # Deploy database schema to Azure SQL
      - name: Deploy database migrations
        env:
         SQL_CONNECTION_STRING: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
        run: |
         # Install Azure CLI
         curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    
         # Install SQL Server tools
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev

         # Add SQL tools to PATH
         echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
         source ~/.bashrc

         # Run migrations using EF Core CLI (if using EF)
          dotnet tool install --global dotnet-ef
           dotnet ef database update --connection "$SQL_CONNECTION_STRING"


      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'web-app-file-storage'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: './publish'

      # # Optional: Verify deployment
      # - name: Check deployment
      #   run: curl -f https://your-app-name.azurewebsites.net/api/health
